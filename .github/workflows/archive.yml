---

name: Archive
run-name: Archive

on:

  schedule:
    - cron: '01 02 03 1/1 *'
    - cron: '03 04 05 1/2 *'
    - cron: '35 23 18 1/3 *'
    - cron: '42 07 29 1/4 *'
    - cron: '59 09 29 1/5 *'
    - cron: '56 21 17 1/6 *'
    - cron: '23 09 11 1/7 *'
    - cron: '18 12 06 1/8 *'
    - cron: '38 10 14 1/9 *'

  push:
    branches: [main]
    paths: [.github/workflows/archive.yml]

env:
  GH_TOKEN: ${{ secrets.AUTO_DOWNLOAD_WREN_ARCHIVE }}

jobs:

  enumerate:
    name: Enumerate
    runs-on: ubuntu-latest
    timeout-minutes: 1000 # Max time out is lower, but allow for future increase
    steps:

      - name: Install
        run: |
          mkdir -p ~/.local/bin
          echo "~/.local/bin" >> "$GITHUB_PATH"
          curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o ~/.local/bin/yt-dlp
          chmod a+rx ~/.local/bin/yt-dlp
          sudo apt install -y tor

      - id: enumerate
        name: Enumerate
        run: yt-dlp --simulate https://www.youtube.com/@Wren6858 --proxy socks5h://localhost:9050 --print webpage_url --quiet --ignore-errors 2>/dev/null | sort --random-sort | jq --raw-input | jq --slurp --raw-output '"urls=\(.)"' | tee -a "${GITHUB_OUTPUT}"

    outputs:
      urls: ${{ steps.enumerate.outputs.urls }}

  archive:
    name: Archive
    needs: enumerate
    runs-on: ubuntu-latest
    timeout-minutes: 1000 # Max time out is lower, but allow for future increase

    strategy:
      fail-fast: false
      max-parallel: 256
      matrix:
        url: ${{ fromJSON(needs.enumerate.outputs.urls) }}

    steps:

      - name: Install
        run: |
          mkdir -p ~/.local/bin
          echo "~/.local/bin" >> "$GITHUB_PATH"
          curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o ~/.local/bin/yt-dlp
          chmod a+rx ~/.local/bin/yt-dlp
          sudo apt install -y tor ffmpeg

      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.AUTO_DOWNLOAD_WREN_ARCHIVE }}

      - name: Determine Target
        id: target
        run: |
          grep --invert "^#" << EOF | tee -a "${GITHUB_OUTPUT}"

          # Get the branch that this url will be archived via
          branch=$(
            echo "archive/${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-$(openssl rand -hex 8)"
          )

          EOF

      - name: Download
        continue-on-error: true # Don't worry if it could not be mirrored, some individual files may fail but can be manually recovered later
        timeout-minutes: 60 # max time out is 600, quit and at least try to commit / push what was downloaded so far
        run: |
          yt-dlp "${{ matrix.url }}" \
            --extract-audio --audio-format m4a \
            --restrict-filenames --windows-filenames \
            --sleep-subtitles 10 --sleep-requests 10 --sleep-interval 10 --max-sleep-interval 60 \
            --proxy socks5h://localhost:9050 \
            --no-abort-on-error

      # === PGP KEY SETUP AFTER THIS POINT. ====================================

      - name: Setup GPG
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.AUTO_COMMIT_GPG_PRIVATE_KEY_WREN_ARCHIVE }}
          passphrase: ${{ secrets.AUTO_COMMIT_GPG_PASSPHRASE_WREN_ARCHIVE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Push
        id: auto-commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: .
          create_branch: true
          branch: ${{ steps.target.outputs.branch }}
          commit_author: norwd <106889957+norwd@users.noreply.github.com>
          commit_user_name: norwd
          commit_user_email: 106889957+norwd@users.noreply.github.com
          commit_options: -s -S
          commit_message: |
            Archive

            **NOTE:** This is an automatic commit. See the archive.yml workflow.

      - name: Create Pull Request
        if: ${{ steps.auto-commit.outputs.changes_detected == 'true' || steps.auto-commit-cleanup.outputs.changes_detected == 'true' }}
        run: gh --repo "${{ github.repository }}" pr create --title "${TITLE}" --body "${BODY}" --base "${BASE}" --head "${HEAD}" | tee -a "${GITHUB_STEP_SUMMARY}" | tee -a pr.txt
        env:
          BASE: ${{ github.ref_name }}
          HEAD: ${{ steps.target.outputs.branch }}
          TITLE: "Archive"
          BODY: |
            **NOTE:** This is an automatic commit. See the archive.yml workflow.

      - name: Approve Pull Request
        continue-on-error: true # Don't worry if it can't merge, the PR can be manually merged later
        if: ${{ steps.auto-commit.outputs.changes_detected == 'true' }}
        run: gh --repo "${{ github.repository }}" pr merge --auto --merge "$(cat pr.txt)"
